/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tictactoe;

import connection.DBConnection;
import controller.MultiPlayerController;
import controller.PlayerController;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ruchiranga
 */
public class WelcomeScreen extends javax.swing.JFrame {

    boolean isSinglePlayer = true;
    int isPlayer = 0;

    /**
     * Creates new form WelcomeScreen
     */
    public WelcomeScreen() {
        initComponents();
        singlePlayerBtn.setOpaque(false);
        singlePlayerBtn.setContentAreaFilled(false);
        twoPlayerBtn.setOpaque(false);
        twoPlayerBtn.setContentAreaFilled(false);
        quitGameBtn.setOpaque(false);
        quitGameBtn.setContentAreaFilled(false);

        singlePlayerNewPlayerBtn.setOpaque(false);
        singlePlayerNewPlayerBtn.setContentAreaFilled(false);
        singlePlayerBackBtn.setOpaque(false);
        singlePlayerBackBtn.setContentAreaFilled(false);
        singlePlayerQuitGameBtn.setOpaque(false);
        singlePlayerQuitGameBtn.setContentAreaFilled(false);

        newPlayer1Btn.setOpaque(false);
        newPlayer1Btn.setContentAreaFilled(false);
        newPlayer2Btn.setOpaque(false);
        newPlayer2Btn.setContentAreaFilled(false);
        backBtn.setOpaque(false);
        backBtn.setContentAreaFilled(false);
        twoPlayerQuitGameBtn.setOpaque(false);
        twoPlayerQuitGameBtn.setContentAreaFilled(false);

        addPlayerBtn.setOpaque(false);
        addPlayerBtn.setContentAreaFilled(false);
        newPlayerBackBtn.setOpaque(false);
        newPlayerBackBtn.setContentAreaFilled(false);
        newPlayerQuitGameBtn.setOpaque(false);
        newPlayerQuitGameBtn.setContentAreaFilled(false);

        playBtn.setOpaque(false);
        playBtn.setContentAreaFilled(false);

        singlePlayerPanel.setOpaque(false);
        twoPlayerPanel.setOpaque(false);
        NewPlayerPlanel.setOpaque(false);
        //singlePlayerPanel.setContentAreaFilled(false);
        singlePlayerPanel.setVisible(false);
        twoPlayerPanel.setVisible(false);
        NewPlayerPlanel.setVisible(false);
        playBtn.setVisible(false);

        String[] players = null;
        try {
            players = PlayerController.getPlayers();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (players.length == 0) {
            player1Combo.setEnabled(false);
            player2Combo.setEnabled(false);
            singlePlayerNameCombo.setEnabled(false);
        } else {
            for (String name : players) {
                player1Combo.addItem(name);
                player2Combo.addItem(name);
                singlePlayerNameCombo.addItem(name);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        twoPlayerPanel = new javax.swing.JPanel();
        player1Combo = new javax.swing.JComboBox();
        twoPlayerQuitGameBtn = new javax.swing.JButton();
        newPlayer1Btn = new javax.swing.JButton();
        Player1Label = new javax.swing.JLabel();
        Player2Label = new javax.swing.JLabel();
        player2Combo = new javax.swing.JComboBox();
        newPlayer2Btn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        NewPlayerPlanel = new javax.swing.JPanel();
        newPlayerQuitGameBtn = new javax.swing.JButton();
        newPlayerNameLabel = new javax.swing.JLabel();
        newPlayerBackBtn = new javax.swing.JButton();
        playerNameText = new javax.swing.JTextField();
        addPlayerBtn = new javax.swing.JButton();
        singlePlayerPanel = new javax.swing.JPanel();
        singlePlayerNameCombo = new javax.swing.JComboBox();
        singlePlayerQuitGameBtn = new javax.swing.JButton();
        singlePlayerNewPlayerBtn = new javax.swing.JButton();
        singlePlayerLabel = new javax.swing.JLabel();
        singlePlayerBackBtn = new javax.swing.JButton();
        playBtn = new javax.swing.JButton();
        twoPlayerBtn = new javax.swing.JButton();
        singlePlayerBtn = new javax.swing.JButton();
        quitGameBtn = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        backgroundLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tic Tac Toe");
        setMinimumSize(new java.awt.Dimension(626, 536));
        getContentPane().setLayout(null);

        twoPlayerPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 102, 0), new java.awt.Color(153, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 153, 0)));

        player1Combo.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        player1Combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Players" }));
        player1Combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player1ComboActionPerformed(evt);
            }
        });

        twoPlayerQuitGameBtn.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        twoPlayerQuitGameBtn.setText("Quit Game");
        twoPlayerQuitGameBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 153, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 204, 0)));
        twoPlayerQuitGameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoPlayerQuitGameBtnActionPerformed(evt);
            }
        });

        newPlayer1Btn.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        newPlayer1Btn.setText("New Player");
        newPlayer1Btn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 153, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 204, 0)));
        newPlayer1Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPlayer1BtnActionPerformed(evt);
            }
        });

        Player1Label.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        Player1Label.setText("Select Player 1");

        Player2Label.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        Player2Label.setText("Select Player 2");

        player2Combo.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        player2Combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Players" }));
        player2Combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                player2ComboActionPerformed(evt);
            }
        });

        newPlayer2Btn.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        newPlayer2Btn.setText("New Player");
        newPlayer2Btn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 153, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 204, 0)));
        newPlayer2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPlayer2BtnActionPerformed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        backBtn.setText("Back");
        backBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 153, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 204, 0)));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout twoPlayerPanelLayout = new javax.swing.GroupLayout(twoPlayerPanel);
        twoPlayerPanel.setLayout(twoPlayerPanelLayout);
        twoPlayerPanelLayout.setHorizontalGroup(
            twoPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(twoPlayerPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(twoPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(twoPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(newPlayer2Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newPlayer1Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(twoPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(twoPlayerPanelLayout.createSequentialGroup()
                                .addComponent(Player2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(player2Combo, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(twoPlayerPanelLayout.createSequentialGroup()
                                .addComponent(Player1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(player1Combo, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(twoPlayerPanelLayout.createSequentialGroup()
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(twoPlayerQuitGameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        twoPlayerPanelLayout.setVerticalGroup(
            twoPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(twoPlayerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(twoPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(player1Combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Player1Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newPlayer1Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(twoPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(player2Combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Player2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newPlayer2Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(twoPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(twoPlayerQuitGameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(twoPlayerPanel);
        twoPlayerPanel.setBounds(160, 170, 310, 220);

        NewPlayerPlanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 102, 0), new java.awt.Color(153, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 153, 0)));

        newPlayerQuitGameBtn.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        newPlayerQuitGameBtn.setText("Quit Game");
        newPlayerQuitGameBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 153, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 204, 0)));
        newPlayerQuitGameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPlayerQuitGameBtnActionPerformed(evt);
            }
        });

        newPlayerNameLabel.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        newPlayerNameLabel.setText("Player Name");

        newPlayerBackBtn.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        newPlayerBackBtn.setText("Back");
        newPlayerBackBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 153, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 204, 0)));
        newPlayerBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPlayerBackBtnActionPerformed(evt);
            }
        });

        playerNameText.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        playerNameText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        addPlayerBtn.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        addPlayerBtn.setText("Add Player");
        addPlayerBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 153, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 204, 0)));
        addPlayerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlayerBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NewPlayerPlanelLayout = new javax.swing.GroupLayout(NewPlayerPlanel);
        NewPlayerPlanel.setLayout(NewPlayerPlanelLayout);
        NewPlayerPlanelLayout.setHorizontalGroup(
            NewPlayerPlanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewPlayerPlanelLayout.createSequentialGroup()
                .addGroup(NewPlayerPlanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewPlayerPlanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(newPlayerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(playerNameText))
                    .addGroup(NewPlayerPlanelLayout.createSequentialGroup()
                        .addGroup(NewPlayerPlanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(NewPlayerPlanelLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(newPlayerBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(newPlayerQuitGameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(NewPlayerPlanelLayout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(addPlayerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 15, Short.MAX_VALUE)))
                .addContainerGap())
        );
        NewPlayerPlanelLayout.setVerticalGroup(
            NewPlayerPlanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewPlayerPlanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(NewPlayerPlanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPlayerNameLabel)
                    .addComponent(playerNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(addPlayerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addGap(38, 38, 38)
                .addGroup(NewPlayerPlanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPlayerQuitGameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPlayerBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(NewPlayerPlanel);
        NewPlayerPlanel.setBounds(160, 170, 310, 220);

        singlePlayerPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 102, 0), new java.awt.Color(153, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 153, 0)));

        singlePlayerNameCombo.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N

        singlePlayerQuitGameBtn.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        singlePlayerQuitGameBtn.setText("Quit Game");
        singlePlayerQuitGameBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 153, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 204, 0)));
        singlePlayerQuitGameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singlePlayerQuitGameBtnActionPerformed(evt);
            }
        });

        singlePlayerNewPlayerBtn.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        singlePlayerNewPlayerBtn.setText("New Player");
        singlePlayerNewPlayerBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 153, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 204, 0)));
        singlePlayerNewPlayerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singlePlayerNewPlayerBtnActionPerformed(evt);
            }
        });

        singlePlayerLabel.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        singlePlayerLabel.setText("Select Player");

        singlePlayerBackBtn.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        singlePlayerBackBtn.setText("Back");
        singlePlayerBackBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 153, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 204, 0)));
        singlePlayerBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singlePlayerBackBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout singlePlayerPanelLayout = new javax.swing.GroupLayout(singlePlayerPanel);
        singlePlayerPanel.setLayout(singlePlayerPanelLayout);
        singlePlayerPanelLayout.setHorizontalGroup(
            singlePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, singlePlayerPanelLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(singlePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, singlePlayerPanelLayout.createSequentialGroup()
                        .addComponent(singlePlayerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addComponent(singlePlayerBackBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(singlePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(singlePlayerNewPlayerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .addComponent(singlePlayerNameCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(singlePlayerQuitGameBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28))
        );
        singlePlayerPanelLayout.setVerticalGroup(
            singlePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(singlePlayerPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(singlePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(singlePlayerNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(singlePlayerLabel))
                .addGap(18, 18, 18)
                .addComponent(singlePlayerNewPlayerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(singlePlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(singlePlayerQuitGameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(singlePlayerBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        getContentPane().add(singlePlayerPanel);
        singlePlayerPanel.setBounds(160, 170, 310, 220);

        playBtn.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        playBtn.setText("Let's Play");
        playBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 153, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 204, 0)));
        playBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playBtnActionPerformed(evt);
            }
        });
        getContentPane().add(playBtn);
        playBtn.setBounds(220, 400, 180, 50);

        twoPlayerBtn.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        twoPlayerBtn.setText("Two Player");
        twoPlayerBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 153, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 204, 0)));
        twoPlayerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoPlayerBtnActionPerformed(evt);
            }
        });
        getContentPane().add(twoPlayerBtn);
        twoPlayerBtn.setBounds(220, 280, 190, 60);

        singlePlayerBtn.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        singlePlayerBtn.setText("Single Player");
        singlePlayerBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 153, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 204, 0)));
        singlePlayerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singlePlayerBtnActionPerformed(evt);
            }
        });
        getContentPane().add(singlePlayerBtn);
        singlePlayerBtn.setBounds(220, 210, 190, 60);

        quitGameBtn.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        quitGameBtn.setText("Quit Game");
        quitGameBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 153, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 204, 0), new java.awt.Color(204, 204, 0)));
        quitGameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitGameBtnActionPerformed(evt);
            }
        });
        getContentPane().add(quitGameBtn);
        quitGameBtn.setBounds(220, 350, 190, 60);

        titleLabel.setFont(new java.awt.Font("Viner Hand ITC", 3, 36)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(153, 0, 0));
        titleLabel.setText("Tic Tac Toe");
        getContentPane().add(titleLabel);
        titleLabel.setBounds(210, 120, 210, 40);

        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fine-ancient-leather-scroll-background-psd_54-10079.jpg"))); // NOI18N
        getContentPane().add(backgroundLabel);
        backgroundLabel.setBounds(0, 0, 626, 536);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void singlePlayerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singlePlayerBtnActionPerformed

        isSinglePlayer = true;

        singlePlayerBtn.setVisible(false);
        twoPlayerBtn.setVisible(false);
        NewPlayerPlanel.setVisible(false);
        quitGameBtn.setVisible(false);
        singlePlayerPanel.setVisible(true);
        playBtn.setVisible(true);

        singlePlayerNameCombo.removeAllItems();

        String[] names = null;
        try {
            names = PlayerController.getPlayers();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

        for (String name : names) {
            singlePlayerNameCombo.addItem(name);
        }
    }//GEN-LAST:event_singlePlayerBtnActionPerformed

    private void twoPlayerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoPlayerBtnActionPerformed

        isSinglePlayer = false;

        singlePlayerBtn.setVisible(false);
        twoPlayerBtn.setVisible(false);
        NewPlayerPlanel.setVisible(false);
        quitGameBtn.setVisible(false);

        player1Combo.removeAllItems();
        player2Combo.removeAllItems();

        String[] names = null;
        try {
            names = PlayerController.getPlayers();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

        for (String name : names) {
            player1Combo.addItem(name);
            player2Combo.addItem(name);
        }

        twoPlayerPanel.setVisible(true);
        playBtn.setVisible(true);


    }//GEN-LAST:event_twoPlayerBtnActionPerformed

    private void quitGameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitGameBtnActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to quit the game?", "Quit Game", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            System.exit(0);
        }

    }//GEN-LAST:event_quitGameBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        twoPlayerPanel.setVisible(false);
        playBtn.setVisible(false);
        singlePlayerBtn.setVisible(true);
        twoPlayerBtn.setVisible(true);
        quitGameBtn.setVisible(true);

    }//GEN-LAST:event_backBtnActionPerformed

    private void newPlayer2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPlayer2BtnActionPerformed
        isPlayer = 2;
        twoPlayerPanel.setVisible(false);
        NewPlayerPlanel.setVisible(true);
        playBtn.setVisible(false);
    }//GEN-LAST:event_newPlayer2BtnActionPerformed

    private void newPlayer1BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPlayer1BtnActionPerformed
        isPlayer = 1;
        twoPlayerPanel.setVisible(false);
        NewPlayerPlanel.setVisible(true);
        playBtn.setVisible(false);
    }//GEN-LAST:event_newPlayer1BtnActionPerformed

    private void twoPlayerQuitGameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoPlayerQuitGameBtnActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to quit the game?", "Quit Game", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_twoPlayerQuitGameBtnActionPerformed

    private void singlePlayerBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singlePlayerBackBtnActionPerformed
        singlePlayerPanel.setVisible(false);
        NewPlayerPlanel.setVisible(false);
        playBtn.setVisible(false);
        singlePlayerBtn.setVisible(true);
        twoPlayerBtn.setVisible(true);
        quitGameBtn.setVisible(true);
    }//GEN-LAST:event_singlePlayerBackBtnActionPerformed

    private void singlePlayerNewPlayerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singlePlayerNewPlayerBtnActionPerformed
        singlePlayerPanel.setVisible(false);
        NewPlayerPlanel.setVisible(true);
        playBtn.setVisible(false);
    }//GEN-LAST:event_singlePlayerNewPlayerBtnActionPerformed

    private void singlePlayerQuitGameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singlePlayerQuitGameBtnActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to quit the game?", "Quit Game", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_singlePlayerQuitGameBtnActionPerformed

    private void playBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playBtnActionPerformed
        if (isSinglePlayer) {
            SinglePlayer game = new SinglePlayer(""+singlePlayerNameCombo.getSelectedItem());
            this.dispose();
            game.setLocationRelativeTo(null);
            game.setVisible(true);
        } else {
            this.dispose();
            String name1 = ""+player1Combo.getSelectedItem();
            String name2 = ""+player2Combo.getSelectedItem();
            try {
                PlayerController.addPlayer(name1, name2, 2);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
            TwoPlayer game = new TwoPlayer(name1, name2);
            game.setLocationRelativeTo(null);
            game.setVisible(true);
        }
    }//GEN-LAST:event_playBtnActionPerformed

    private void newPlayerQuitGameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPlayerQuitGameBtnActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to quit the game?", "Quit Game", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_newPlayerQuitGameBtnActionPerformed

    private void newPlayerBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPlayerBackBtnActionPerformed

        NewPlayerPlanel.setVisible(false);
        playBtn.setVisible(true);
        if (isSinglePlayer) {
            singlePlayerPanel.setVisible(true);
        } else {
            twoPlayerPanel.setVisible(true);
        }


    }//GEN-LAST:event_newPlayerBackBtnActionPerformed

    private void addPlayerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlayerBtnActionPerformed
        String playerName = playerNameText.getText();
        try {
            PlayerController.addPlayer(playerName, null, 1);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "The Player Name already exists!", "Error", ERROR);
        }
        NewPlayerPlanel.setVisible(false);
        playBtn.setVisible(true);
        
        singlePlayerNameCombo.removeAllItems();
        String player1Name = ""+player1Combo.getSelectedItem();
        player1Combo.removeAllItems();
        player2Combo.removeAllItems();

        String[] names = null;
        try {
            names = PlayerController.getPlayers();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

        for (String name : names) {
            singlePlayerNameCombo.addItem(name);
            player1Combo.addItem(name);
            player2Combo.addItem(name);
        }
        
        player1Combo.setSelectedItem(player1Name);

        if (isSinglePlayer) {
            singlePlayerPanel.setVisible(true);
            singlePlayerNameCombo.setSelectedItem(playerName);
        } else {
            twoPlayerPanel.setVisible(true);
            if (isPlayer == 1) {
                player1Combo.setSelectedItem(playerNameText.getText());
            }
            if (isPlayer == 2) {
                player2Combo.setSelectedItem(playerNameText.getText());
            }
        }
    }//GEN-LAST:event_addPlayerBtnActionPerformed

    private void player1ComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player1ComboActionPerformed
        String[] names = null;
        try {
            names = PlayerController.getPlayers();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        String player2 = ""+player2Combo.getSelectedItem();
        player2Combo.removeAllItems();
        for (String name : names) {
            player2Combo.addItem(name);
        }
        player2Combo.removeItem(player1Combo.getSelectedItem());
        try{
           player2Combo.setSelectedItem(player2);
        }catch(Exception e){
            
        }
        
    }//GEN-LAST:event_player1ComboActionPerformed

    private void player2ComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_player2ComboActionPerformed
        String[] names = null;
        try {
            names = PlayerController.getPlayers();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(WelcomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        String player1 = ""+player1Combo.getSelectedItem();
        player1Combo.removeAllItems();
        for (String name : names) {
            player1Combo.addItem(name);
        }
        player1Combo.removeItem(player2Combo.getSelectedItem());
        try{
           player1Combo.setSelectedItem(player1);
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_player2ComboActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).losinglePlayerButton.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new WelcomeScreen().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel NewPlayerPlanel;
    private javax.swing.JLabel Player1Label;
    private javax.swing.JLabel Player2Label;
    private javax.swing.JButton addPlayerBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JButton newPlayer1Btn;
    private javax.swing.JButton newPlayer2Btn;
    private javax.swing.JButton newPlayerBackBtn;
    private javax.swing.JLabel newPlayerNameLabel;
    private javax.swing.JButton newPlayerQuitGameBtn;
    private javax.swing.JButton playBtn;
    private javax.swing.JComboBox player1Combo;
    private javax.swing.JComboBox player2Combo;
    private javax.swing.JTextField playerNameText;
    private javax.swing.JButton quitGameBtn;
    private javax.swing.JButton singlePlayerBackBtn;
    private javax.swing.JButton singlePlayerBtn;
    private javax.swing.JLabel singlePlayerLabel;
    private javax.swing.JComboBox singlePlayerNameCombo;
    private javax.swing.JButton singlePlayerNewPlayerBtn;
    private javax.swing.JPanel singlePlayerPanel;
    private javax.swing.JButton singlePlayerQuitGameBtn;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton twoPlayerBtn;
    private javax.swing.JPanel twoPlayerPanel;
    private javax.swing.JButton twoPlayerQuitGameBtn;
    // End of variables declaration//GEN-END:variables
}
